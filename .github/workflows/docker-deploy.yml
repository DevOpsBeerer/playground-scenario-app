name: Docker Build and Deploy

on:
  push:
    tags:
      - "v*"
      - "release-*"

env:
  REGISTRY: rg.fr-par.scw.cloud/devopsbeerer
  IMAGE_NAME: api

jobs:
  security:
    name: CI - Security
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install hadolint (Dockerfile linter)
        run: |
          wget -O hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x hadolint


          sudo mv hadolint /usr/local/bin/

      - name: Lint Dockerfile
        run: |
          echo "🔍 Linting Dockerfile..."
          hadolint Dockerfile || echo "⚠️ Dockerfile linting failed but continuing pipeline..."

      - name: Install Trivy (Security scanner)
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Run Trivy filesystem scan
        run: |
          echo "🔒 Scanning filesystem for security vulnerabilities..."
          trivy fs --exit-code 0 --severity HIGH,CRITICAL . || echo "⚠️ Filesystem security scan failed but continuing pipeline..."

      - name: Build Docker image for security scan
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: security-scan:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker

      - name: Run Trivy image scan
        run: |
          echo "🔒 Scanning Docker image for security vulnerabilities..."
          trivy image --exit-code 0 --severity HIGH,CRITICAL security-scan:latest || echo "⚠️ Image security scan failed but continuing pipeline..."

      - name: Generate security summary
        run: |
          echo "## 🛡️ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Dockerfile linting executed (warnings allowed)" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Filesystem security scan executed (warnings allowed)" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Image security scan executed (warnings allowed)" >> $GITHUB_STEP_SUMMARY

  build-and-push:
    name: CI - Build and Push
    runs-on: ubuntu-latest
    needs: security
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Log in to Scaleway Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: nologin
          password: ${{ secrets.SCALEWAY_SECRET_KEY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate build summary
        run: |
          echo "## 🚀 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Multi-platform build completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Image pushed to Scaleway registry" >> $GITHUB_STEP_SUMMARY
